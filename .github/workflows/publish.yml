name: Publish on anaconda

on:
  workflow_dispatch:
  pull_request:
  release:
    types: published

jobs:
  upload_on_anaconda:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        build_type: [Release]
        python-version: ["3.10"]
        include:
          - python-version: "3.10"
            numpy-version: "1.22"
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}

    - name: Install conda-build and anaconda-client
      shell: bash -el {0}
      run: conda install conda-build anaconda-client

    - name: Set version
      run: |
        VER=$(grep "<version>" package.xml | sed 's/  <version>//g' | sed 's/<\/version>//g')
        echo "VERSION=$VER" >> $GITHUB_ENV

    - name: Build the recipe
      shell: bash -el {0}
      run: |
        conda build -c conda-forge \
          --error-overlinking \
          --py ${{ matrix.python-version }} \
          --numpy ${{ matrix.numpy-version }} \
          conda/proxsuite-nlp-release

    - name: upload on conda
      if: github.event_name == 'release'
      shell: bash -el {0}
      run: anaconda -t ${{ secrets.SIMPLE_ROBOTICS_ANACONDA_TOKEN }} upload --force $CONDA_PREFIX/conda-bld/*/proxsuite-nlp-*.tar.bz2

  check:
    if: always()
    name: check-upload-on-anaconda

    needs:
    - upload_on_anaconda

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
